[{"C:\\weldev-project-react-graphql-client-bp\\src\\index.tsx":"1","C:\\weldev-project-react-graphql-client-bp\\src\\components\\Layout.tsx":"2","C:\\weldev-project-react-graphql-client-bp\\src\\components\\Navigation.tsx":"3","C:\\weldev-project-react-graphql-client-bp\\src\\components\\PageTitle.tsx":"4","C:\\weldev-project-react-graphql-client-bp\\src\\components\\MenuItem.tsx":"5","C:\\weldev-project-react-graphql-client-bp\\src\\config\\apolloClient.ts":"6","C:\\weldev-project-react-graphql-client-bp\\src\\config\\routes.ts":"7","C:\\weldev-project-react-graphql-client-bp\\src\\pages\\Home.tsx":"8","C:\\weldev-project-react-graphql-client-bp\\src\\data\\Currencies.ts":"9","C:\\weldev-project-react-graphql-client-bp\\src\\App.tsx":"10","C:\\weldev-project-react-graphql-client-bp\\src\\queries\\index.ts":"11","C:\\weldev-project-react-graphql-client-bp\\src\\pages\\GraphQLApi\\Currency.tsx":"12","C:\\weldev-project-react-graphql-client-bp\\src\\components\\CurrencyResult.tsx":"13","C:\\weldev-project-react-graphql-client-bp\\src\\components\\AppMenu.tsx":"14"},{"size":279,"mtime":1607543934409,"results":"15","hashOfConfig":"16"},{"size":2046,"mtime":1639709664676,"results":"17","hashOfConfig":"16"},{"size":2355,"mtime":1610310244365,"results":"18","hashOfConfig":"16"},{"size":616,"mtime":1639695973078,"results":"19","hashOfConfig":"16"},{"size":2238,"mtime":1639695973078,"results":"20","hashOfConfig":"16"},{"size":331,"mtime":1639695973078,"results":"21","hashOfConfig":"16"},{"size":1046,"mtime":1639709967170,"results":"22","hashOfConfig":"16"},{"size":2377,"mtime":1639708241859,"results":"23","hashOfConfig":"16"},{"size":9530,"mtime":1639708070850,"results":"24","hashOfConfig":"16"},{"size":2096,"mtime":1639709974943,"results":"25","hashOfConfig":"16"},{"size":291,"mtime":1639710034115,"results":"26","hashOfConfig":"16"},{"size":5179,"mtime":1639711342956,"results":"27","hashOfConfig":"16"},{"size":2150,"mtime":1639711318089,"results":"28","hashOfConfig":"16"},{"size":3816,"mtime":1639711488666,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uws3r3",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\weldev-project-react-graphql-client-bp\\src\\index.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\components\\Layout.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\components\\Navigation.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\components\\PageTitle.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\components\\MenuItem.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\config\\apolloClient.ts",[],"C:\\weldev-project-react-graphql-client-bp\\src\\config\\routes.ts",[],"C:\\weldev-project-react-graphql-client-bp\\src\\pages\\Home.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\data\\Currencies.ts",[],"C:\\weldev-project-react-graphql-client-bp\\src\\App.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\queries\\index.ts",[],"C:\\weldev-project-react-graphql-client-bp\\src\\pages\\GraphQLApi\\Currency.tsx",["59"],"import { useLazyQuery } from \"@apollo/client\";\r\nimport { Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport SwapIcon from \"@material-ui/icons/SwapHorizRounded\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { CurrencyResult } from \"../../components/CurrencyResult\";\r\nimport { CurrencySelection } from \"../../components/CurrencySelection\";\r\nimport { CurrencyTextField } from \"../../components/CurrencyTextField\";\r\nimport { PageTitle } from \"../../components/PageTitle\";\r\nimport { Conversion } from \"../../model/Conversion.model\";\r\n\r\nimport Currency from \"../../model/Currency.model\";\r\nimport { GET_CURRENCIES } from \"../../queries\";\r\nimport {\r\n  APP_TITLE,\r\n  PAGE_TITLE_GRAPHQL_API_CURRENCY,\r\n} from \"../../utils/constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      maxWidth: \"auto\",\r\n    },\r\n    source: {\r\n      flex: 1,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n    label: {\r\n      fontWeight: \"bold\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const CurrencyPage = () => {\r\n  const classes = useStyles();\r\n  const [currencySource, setCurrencySource] = useState<Currency>({\r\n    name: \"New Zealand Dollar\",\r\n    code: \"NZD\",\r\n  });\r\n  const [currencyDestination, setCurrencyDestination] = useState<Currency>({\r\n    name: \"US Dollar\",\r\n    code: \"USD\",\r\n  });\r\n  const [amount, setAmount] = useState(1);\r\n  const [getCurrencies, { loading, data, error }] =\r\n    useLazyQuery<Conversion>(GET_CURRENCIES);\r\n\r\n  useEffect(\r\n    () =>\r\n      getCurrencies({\r\n        variables: { currency: currencySource && currencySource.code },\r\n      }),\r\n    [currencySource]\r\n  );\r\n\r\n  const handleAmount = (event: React.ChangeEvent<{ value: unknown }>) =>\r\n    setAmount(event.target.value as number);\r\n\r\n  const handleCurrencySource = (currency: Currency) =>\r\n    setCurrencySource(currency);\r\n\r\n  const handleCurrencyDestination = (currency: Currency) =>\r\n    setCurrencyDestination(currency);\r\n\r\n  const handleCurrencySwap = () => {\r\n    setCurrencyDestination(currencySource);\r\n    setCurrencySource(currencyDestination);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {PAGE_TITLE_GRAPHQL_API_CURRENCY} | {APP_TITLE}\r\n        </title>\r\n      </Helmet>\r\n      <PageTitle title={PAGE_TITLE_GRAPHQL_API_CURRENCY} />\r\n      <div>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          The conversion rates in this example are provided by the Coinbase API,\r\n          through a GraphQL server instance. You can find it on the \"Get\r\n          started\" section of the Apollo Client docs.\r\n        </Typography>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\" className={classes.label}>\r\n                    Convert From\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <CurrencyTextField\r\n                    amount={amount}\r\n                    handleChange={handleAmount}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <CurrencySelection\r\n                    currencyCode={currencySource}\r\n                    handleChange={handleCurrencySource}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\" className={classes.label}>\r\n                    To\r\n                  </Typography>\r\n                  <Button onClick={handleCurrencySwap} variant=\"contained\">\r\n                    <SwapIcon color=\"primary\" />\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <CurrencySelection\r\n                    currencyCode={currencyDestination}\r\n                    handleChange={handleCurrencyDestination}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        {amount > 0 && currencySource && currencyDestination ? (\r\n          <CurrencyResult\r\n            data={data}\r\n            loading={loading}\r\n            error={error}\r\n            amount={amount}\r\n            currencySource={currencySource}\r\n            currencyDestination={currencyDestination}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\weldev-project-react-graphql-client-bp\\src\\components\\CurrencyResult.tsx",[],"C:\\weldev-project-react-graphql-client-bp\\src\\components\\AppMenu.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":58,"column":5,"nodeType":"62","endLine":58,"endColumn":21,"suggestions":"63"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrencies'. Either include it or remove the dependency array.","ArrayExpression",["64"],{"desc":"65","fix":"66"},"Update the dependencies array to be: [currencySource, getCurrencies]",{"range":"67","text":"68"},[1824,1840],"[currencySource, getCurrencies]"]